package leetCode代码._92反转链表Ⅱ;



class ListNode {
    int val;
    ListNode next;
    ListNode(int x) { val = x; }
}

class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if(head == null)
            return null;
        ListNode pre = head;
        ListNode cur = head;
        ListNode first = null;
        ListNode last = null;
        int index = 1;
        while(index <= n){
            if(index == m){
                last = cur;
                first = pre;
            }
            if(index > m){
                ListNode tmp = cur.next;
                cur.next = pre;
                pre = cur;
                cur = tmp;
            }else {
                pre = cur;
                cur = cur.next;
            }
            index++;
        }
        if(m == 1)
            head = pre;
        else
            first.next = pre;
        last.next = cur;
        return head;
    }
}

public class Main {
    public static void main(String[] args) {

    }
}
