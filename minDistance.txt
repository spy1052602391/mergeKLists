package leetCode´úÂë._72±à¼­¾àÀë;

class Solution {
    public int minDistance(String word1, String word2) {
        char[] chars1 = word1.toCharArray();
        char[] chars2 = word2.toCharArray();
        int[][] dp = new int[chars1.length+1][chars2.length+1];
        for(int i=0; i<dp.length; i++)
            dp[i][0] = i;
        for(int j=1; j<dp[0].length; j++)
            dp[0][j] = j;
        for(int i=1; i<dp.length; i++){
            for(int j=1; j<dp[0].length; j++){
                if(chars1[i-1] == chars2[j-1]){
                    dp[i][j] = dp[i-1][j-1];
                }else{
                    dp[i][j] = Math.min(Math.min(dp[i-1][j-1]+1 , dp[i][j-1]+1),dp[i-1][j]+1);
                }
            }
        }
        return dp[chars1.length][chars2.length];
    }
}

public class Main {
    public static void main(String[] args) {

    }
}
